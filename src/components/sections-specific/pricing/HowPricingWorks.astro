---
import Container from "../../shared/Container.astro";
import { Image } from 'astro:assets';

// Updated Assets
import diagramImage from '../../../assets/Frame 10124037.png';
import blueSquareIcon from '../../../assets/Rectangle 475.png';
import yellowSquareIcon from '../../../assets/Rectangle 474.png';
// Note: Arrow will be CSS/HTML for now.

const pricingDetails = [
  {
    type: 'blue', // To differentiate icon styling
    iconAsset: blueSquareIcon,
    title: "Compute instances",
    description: "The compute and storage capacity you provision."
  },
  {
    type: 'blue',
    iconAsset: blueSquareIcon,
    title: "Cloud management",
    description: "Based on the number of vCPUs across all your instances."
  },
  {
    type: 'yellow', // Special type for yellow icon
    iconAsset: yellowSquareIcon,
    title: "Database license",
    description: "Based on the volume of data under management."
  },
  {
    type: 'arrow', // Special type for arrow icon
    iconAsset: null, // No direct asset, will be CSS/HTML
    title: "Network transfer",
    description: "As metered by the cloud provider, at pre-agreed rates."
  }
];
---

<section class="how-pricing-works-section">
  <Container>
    <div class="how-pricing-content-grid">
      <div class="pricing-info-column">
        <h2 class="main-title">How pricing works</h2>
        <div class="details-grid">
          {pricingDetails.map(detail => (
            <div class="detail-item">
              <div class="detail-icon-wrapper">
                {detail.type === 'blue' && detail.iconAsset && <Image src={detail.iconAsset} alt="" class="detail-icon blue-square"/>}
                {detail.type === 'yellow' && detail.iconAsset && <Image src={detail.iconAsset} alt="" class="detail-icon yellow-square"/>}
                {detail.type === 'arrow' && <div class="detail-icon arrow-icon">&rarr;</div>}
              </div>
              <div class="detail-text">
                <h4 class="detail-title">{detail.title}</h4>
                <p class="detail-description">{detail.description}</p>
              </div>
            </div>
          ))}
        </div>
      </div>
      <div class="pricing-diagram-column">
        <Image src={diagramImage} alt="Aerospike VPC and Application VPC diagram" class="main-diagram-image"/>
        <p class="diagram-caption">Example: a three-node cluster, replicated across two availability zones</p>
      </div>
    </div>
  </Container>
</section>

<style>
  .how-pricing-works-section {
    /* background: none; Removed gradient */
    padding: 50px 0; /* Added padding for spacing relative to other sections */
    color: var(--color-white, #ffffff);
    /* Ensure container inside is centered if needed */
    display: flex; 
    justify-content: center;
  }

  .how-pricing-content-grid {
    background: linear-gradient(
      to bottom,
      var(--color-secondary, #152d54),
      var(--color-black, #000000)
    ); /* Moved gradient here */
    padding: 80px 50px; /* Moved padding here */
    display: flex;
    gap: 10px;
    align-items: flex-start;
    width: 1320px;
    height: 571px; /* Revisit if fixed height causes issues */
    border-radius: 20px;
    margin-left: auto;
    margin-right: auto;
    overflow: hidden; /* Ensure content respects border-radius */
  }

  .pricing-info-column {
    width: 45%;
    display: flex;
    flex-direction: column;
  }

  .main-title {
    font-family: "Tiempos", serif;
    font-size: clamp(2rem, 5vw, 2.8rem);
    font-weight: 500;
    margin-bottom: 40px;
    line-height: 1.2;
  }

  .details-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 30px 20px;
  }

  .detail-item {
    display: flex;
    align-items: flex-start;
    gap: 15px;
  }

  .detail-icon-wrapper {
    flex-shrink: 0;
    padding-top: 4px;
  }
  
  .detail-icon {
    width: 20px;
    height: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .detail-icon.blue-square :global(img) {
    width: 100%;
    height: 100%;
  }
  
  .detail-icon.yellow-square :global(img) {
    width: 100%;
    height: 100%;
  }

  .detail-icon.arrow-icon {
    font-size: 24px;
    color: var(--color-white, #ffffff);
    line-height: 1;
  }

  .detail-text {
    display: flex;
    flex-direction: column;
  }

  .detail-title {
    font-size: 1.1rem;
    font-weight: 600;
    margin: 0 0 6px 0;
    line-height: 1.3;
  }

  .detail-description {
    font-size: 0.9rem;
    line-height: 1.5;
    opacity: 0.85;
    margin: 0;
  }

  .pricing-diagram-column {
    width: 55%;
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .main-diagram-image {
    width: 100%;
    height: auto;
    border-radius: 12px;
    display: block;
    margin-bottom: 15px;
  }

  .diagram-caption {
    font-size: 0.85rem;
    color: var(--color-subtle-text, #b4b4b4);
    text-align: center;
    max-width: 80%;
  }

  @media (max-width: 1420px) { 
    .how-pricing-works-section {
        padding: 50px 20px; /* Adjust outer padding */
    }
    .how-pricing-content-grid {
       width: 95%; 
       height: auto; /* Allow height to adjust */
       padding: 40px 30px; /* Reduce internal padding */
       flex-direction: column;
       align-items: center;
    }
    .pricing-info-column,
    .pricing-diagram-column {
      width: 100%;
      max-width: 600px;
    }
     .pricing-info-column {
      margin-bottom: 40px;
    }
    .main-title {
      text-align: center;
    }
  }

  @media (max-width: 600px) {
    .how-pricing-works-section {
      padding: 30px 15px; /* Further reduce outer padding */
    }
    .how-pricing-content-grid {
        padding: 30px 20px; /* Further reduce internal padding */
    }
    .details-grid {
      grid-template-columns: 1fr;
      gap: 25px;
    }
     .main-title {
      font-size: 1.8rem;
    }
    .detail-title {
      font-size: 1rem;
    }
    .detail-description {
      font-size: 0.85rem;
    }
  }
</style>
